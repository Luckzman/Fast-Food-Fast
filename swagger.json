{
  "swagger": "2.0",
  "info": {
    "description": "This is a food delivery app that enable restaurant to serve their client better. It gives them the option to order for any food menu on the app from the comfort of their home or offices.",
    "version": "1.0.0",
    "title": "FastFoodFast",
    "contact": {
      "email": "lumpsey@gmail.com"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "auth",
      "description": "Authenticated Users"
    },
    {
      "name": "menu",
      "description": "collection of food menu items"
    },
    {
      "name": "order",
      "description": "list of ordered menu"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Create user",
        "description": "User need to signup to create account",
        "operationId": "signup_user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User need to signup to create account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Sign Successful"
          },
          "400": {
            "description": "Invalid Input supplied"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Enter Email for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "Enter password for login ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/menu/": {
      "get": {
        "tags": [
          "menu"
        ],
        "summary": "Returns collection of food menu",
        "description": "Returns a map of status codes to quantities",
        "operationId": "getMenu",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "menu"
        ],
        "summary": "Create food menu with form data",
        "description": "",
        "operationId": "createMenuWithForm",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "food_name",
            "in": "formData",
            "description": "name of food",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "food description",
            "required": true,
            "type": "string"
          },
          {
            "name": "category",
            "in": "formData",
            "description": "food category",
            "required": true,
            "type": "string"
          },
          {
            "name": "price",
            "in": "formData",
            "description": "food price",
            "required": true,
            "type": "string"
          },
          {
            "name": "image",
            "in": "formData",
            "description": "food price",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "201": {
            "description": "menu created successful"
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/orders/": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Returns list of all food ordered",
        "description": "List of food ordered",
        "operationId": "getOrder",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "order not found"
          }
        }
      },
      "post": {
        "tags": [
          "order"
        ],
        "summary": "place an order for food",
        "description": "",
        "operationId": "createOrder",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "food_name",
            "in": "formData",
            "description": "name of food",
            "required": true,
            "type": "string"
          },
          {
            "name": "ordered_quantity",
            "in": "formData",
            "description": "food description",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "order successfully placed"
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Find order by ID",
        "description": "Returns a single order",
        "operationId": "getOrderById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of menu to return",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "tags": [
          "order"
        ],
        "summary": "Updates a order status by admin",
        "description": "",
        "operationId": "updateOrderStatus",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of pet to return",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "order_status",
            "in": "formData",
            "description": "Update status of an order",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "ordered_quantity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "user_status": {
          "type": "string"
        }
      }
    }
  }
}